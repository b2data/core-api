openapi: 3.0.0
info:
  title: REST API for B2Market
  version: 1.0.0
servers:
  - url: https://localhost:8082
  - url: https://market.b2p.space/api
tags:
  - name: Auth
  - name: Activities
  - name: Files
  - name: Delivery
  - name: Tasks
paths:
  /auth/start:
    post:
      tags:
        - Auth
      summary: Start authentication process
      operationId: startAuth
      requestBody:
        $ref: "#/components/requestBodies/EmptyBody"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - proof
                properties:
                  proof:
                    type: string
  /auth/verify:
    post:
      tags:
        - Auth
      summary: Verify authentication wallet
      operationId: verifyAuth
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - proof
                - account
              properties:
                spaceId:
                  type: string
                  description: Selected Space ID
                proof:
                  type: object
                  required:
                    - payload
                    - signature
                    - timestamp
                    - domain
                  properties:
                    payload:
                      type: string
                      description: TON Connect payload
                    signature:
                      type: string
                      description: TON Connect signature
                    timestamp:
                      type: number
                      description: Timestamp of authentication
                    domain:
                      type: object
                      required:
                        - lengthBytes
                        - value
                      properties:
                        lengthBytes:
                          type: number
                        value:
                          type: string
                account:
                  type: object
                  required:
                    - address
                    - network
                    - publicKey
                    - walletStateInit
                  properties:
                    address:
                      type: string
                      description: Wallet Address
                      example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
                    network:
                      type: string
                      description: Blockchain chain
                    publicKey:
                      type: string
                      description: Wallet Public Key
                    walletStateInit:
                      type: string
                      description: Wallet Public Key
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                  - refreshToken
                  - profile
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  profile:
                    $ref: "#/components/schemas/User"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              example:
                errorCode: auth:404
                message: The proof has not found
  /auth/refresh:
    post:
      tags:
        - Auth
      summary: Refresh Access Token by Refresh token
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - accessToken
                - refreshToken
              properties:
                spaceId:
                  type: string
                  description: Selected Space ID
                accessToken:
                  type: string
                refreshToken:
                  type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - accessToken
                  - refreshToken
                  - profile
                properties:
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
                  profile:
                    $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/UserNotFound"
  /auth/profile:
    get:
      tags:
        - Auth
      security:
        - BearerAuth: []
      summary: Get Profile
      operationId: getProfile
      responses:
        "200":
          $ref: "#/components/responses/UserData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/UserNotFound"
    patch:
      tags:
        - Auth
      security:
        - BearerAuth: []
      summary: Update Profile
      operationId: updateProfile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: First Name
                lastName:
                  type: string
                  description: Last Name
                middleName:
                  type: string
                  description: Middle Name
                avatar:
                  type: string
                  description: Avatar
      responses:
        "200":
          $ref: "#/components/responses/UserData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/UserNotFound"
  /activities/search:
    post:
      tags:
        - Activities
        - Available Providers
      security:
        - BearerAuth: []
        - ProviderClientId: []
          ProviderClientSecret: []
          ProviderUserId: []
      summary: Search activities
      operationId: searchActivities
      requestBody:
        $ref: "#/components/requestBodies/SearchActivitiesBody"
      responses:
        "200":
          $ref: "#/components/responses/SearchActivitiesData"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /admin-access/check:
    get:
      tags:
        - Admin Access
      security:
        - BearerAuth: []
      summary: Check Admin Access
      operationId: checkAdminAccess
      responses:
        "200":
          $ref: "#/components/responses/CheckUserAccess"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /admin-access/search:
    post:
      tags:
        - Admin Access
      security:
        - BearerAuth: []
      summary: Search System Admins
      description: Required `Wallet Admin` access
      operationId: searchAdminAccess
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchModel"
      responses:
        "200":
          $ref: "#/components/responses/SearchAdminAccess"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /admin-access:
    post:
      tags:
        - Admin Access
      security:
        - BearerAuth: []
      summary: Add System Admin
      description: Required `Wallet Admin` access
      operationId: addAdminAccess
      requestBody:
        $ref: "#/components/requestBodies/CreateAdminAccessBody"
      responses:
        "200":
          $ref: "#/components/responses/AdminAccessData"
        "400":
          $ref: "#/components/responses/AdminAccessExist"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  "/admin-access/{wallet}":
    delete:
      tags:
        - Admin Access
      security:
        - BearerAuth: []
      summary: Delete System Admin
      description: Required `Wallet Admin` access
      operationId: deleteAdminAccess
      parameters:
        - $ref: "#/components/parameters/walletParam"
      responses:
        "200":
          $ref: "#/components/responses/AdminAccessData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/AdminAccessNotFound"
  /admin-access/users:
    post:
      tags:
        - Admin Access
      security:
        - BearerAuth: []
      summary: Search users
      description: Required `Admin` access
      operationId: searchUsers
      requestBody:
        $ref: "#/components/requestBodies/SearchUsersBody"
      responses:
        "200":
          $ref: "#/components/responses/SearchUsers"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/AdminAccessNotFound"
  /files:
    post:
      tags:
        - Files
        - Available Providers
      security:
        - BearerAuth: []
        - ProviderClientId: []
          ProviderClientSecret: []
          ProviderUserId: []
      summary: Upload file
      operationId: uploadFile
      requestBody:
        $ref: "#/components/requestBodies/UploadFileBody"
      responses:
        "200":
          $ref: "#/components/responses/FileData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/FileNotFound"
  "/files/{id}":
    get:
      tags:
        - Files
        - Available Public
      summary: Get file
      operationId: getFile
      parameters:
        - $ref: "#/components/parameters/fileIdParam"
      responses:
        "200":
          $ref: "#/components/responses/FileBinary"
        "404":
          $ref: "#/components/responses/FileNotFound"
    delete:
      tags:
        - Files
        - Available Providers
      security:
        - BearerAuth: []
        - ProviderClientId: []
          ProviderClientSecret: []
          ProviderUserId: []
      summary: Delete File
      description: Delete by file ID or external ID
      operationId: deleteFile
      parameters:
        - $ref: "#/components/parameters/fileIdParam"
      responses:
        "200":
          $ref: "#/components/responses/FileData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/FileNotFound"
  "/files/{id}/info":
    get:
      tags:
        - Files
        - Available Public
      summary: Get file info
      operationId: getFileInfo
      parameters:
        - $ref: "#/components/parameters/fileIdParam"
      responses:
        "200":
          $ref: "#/components/responses/FileData"
        "404":
          $ref: "#/components/responses/FileNotFound"
  "/delivery/idt/{id}/info":
    get:
      tags:
        - Delivery
      summary: Get public data of delivery idT
      operationId: getDeliveryIdtPublic
      parameters:
        - $ref: "#/components/parameters/idTKeyParam"
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtBase"
        "404":
          $ref: "#/components/responses/DeliveryIdtNotFound"
  /delivery/idt/search:
    post:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Search delivery idT
      description: Available for `System Admin`
      operationId: searchDeliveryIdt
      requestBody:
        $ref: "#/components/requestBodies/SearchDeliveryIdtBody"
      responses:
        "200":
          $ref: "#/components/responses/SearchDeliveryIdt"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /delivery/idt/prefixes:
    get:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Get prefixes of delivery idT and latest key
      description: Available for `System Admin`
      operationId: getDeliveryIdtPrefixes
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtPrefixes"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /delivery/idt:
    post:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Create new delivery idT
      description: Available for `System Admin`
      operationId: createDeliveryIdt
      requestBody:
        $ref: "#/components/requestBodies/CreateDeliveryIdtBody"
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtCreated"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  "/delivery/idt/{id}":
    get:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Get delivery idT
      description: Available for `System Admin`
      operationId: getDeliveryIdt
      parameters:
        - $ref: "#/components/parameters/idTParam"
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtWithData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DeliveryIdtNotFound"
    patch:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Update delivery idT
      description: Available for `System Admin` or `responsible` wallet
      operationId: updateDeliveryIdt
      parameters:
        - $ref: "#/components/parameters/idTParam"
      requestBody:
        $ref: "#/components/requestBodies/EditDeliveryIdtBody"
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtWithData"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DeliveryIdtNotFound"
  "/delivery/idt/{id}/rebuild":
    post:
      tags:
        - Delivery
      security:
        - BearerAuth: []
      summary: Rebuild delivery idT
      description: Available for `System Admin`
      operationId: rebuildDeliveryIdt
      parameters:
        - $ref: "#/components/parameters/idTParam"
      responses:
        "200":
          $ref: "#/components/responses/DeliveryIdtWithData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/DeliveryIdtNotFound"
  /tasks/search:
    post:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Search tasks
      operationId: searchTasks
      requestBody:
        $ref: "#/components/requestBodies/SearchTasksBody"
      responses:
        "200":
          $ref: "#/components/responses/SearchTasksData"
        "400":
          $ref: "#/components/responses/InvalidData"
  /tasks:
    post:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Create new task
      operationId: createTask
      requestBody:
        $ref: "#/components/requestBodies/CreateTaskBody"
      responses:
        "200":
          $ref: "#/components/responses/TaskWithDataResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  "/tasks/{id}":
    get:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Get task info
      operationId: getTask
      parameters:
        - $ref: "#/components/parameters/taskIdParam"
      responses:
        "200":
          $ref: "#/components/responses/TaskWithDataResponse"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/TaskNotFound"
    put:
      tags:
        - Tasks
      security:
        - BearerAuth: []
      summary: Update task
      operationId: updateTask
      parameters:
        - $ref: "#/components/parameters/taskIdParam"
      requestBody:
        $ref: "#/components/requestBodies/EditTaskBody"
      responses:
        "200":
          $ref: "#/components/responses/TaskWithDataResponse"
        "400":
          $ref: "#/components/responses/InvalidData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/TaskNotFound"
components:
  schemas:
    User:
      type: object
      required:
        - id
        - firstName
      properties:
        id:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        firstName:
          type: string
          description: First Name
        lastName:
          type: string
          description: Last Name
        middleName:
          type: string
          description: Middle Name
        avatar:
          type: string
          description: Avatar
    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
      properties:
        errorCode:
          type: string
        message:
          type: string
    SortModel:
      type: object
      required:
        - field
      properties:
        field:
          type: string
          description: The field for sorting
        sort:
          type: string
          nullable: true
          enum:
            - asc
            - desc
          description: The sorting order
    SearchModel:
      type: object
      properties:
        limit:
          type: number
          description: Number of return items
        offset:
          type: number
          description: Number of skip items
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortModel"
    ActivityType:
      type: string
      description: Activity Type
    ActivityLog:
      type: object
      required:
        - id
        - type
        - userId
        - artefactId
        - data
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Artefact ID
        type:
          $ref: "#/components/schemas/ActivityType"
        userId:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        artefactId:
          type: string
          format: uuid
          description: Artefact ID
        providerId:
          type: string
          format: uuid
          description: Provider ID
        data:
          type: object
          description: Activity Data depends on type
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        userData:
          $ref: "#/components/schemas/User"
    AdminAccess:
      type: object
      required:
        - wallet
        - createdAt
      properties:
        wallet:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        userData:
          $ref: "#/components/schemas/User"
    FileData:
      type: object
      required:
        - id
        - name
        - mimeType
        - size
        - createdBy
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: File ID
        name:
          type: string
          description: File name
        mimeType:
          type: string
          description: File mime type
        size:
          type: number
          description: File size in bytes
        createdBy:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        providerId:
          type: string
          format: uuid
          description: Provider ID
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Last Updating Date
    DeliveryIdtBase:
      type: object
      required:
        - id
        - key
        - status
        - responsible
      properties:
        id:
          type: string
          format: uuid
          description: Delivery idT ID
        key:
          type: string
          description: Delivery idT unique key in format `A_000001`
        status:
          type: string
          enum:
            - created
            - storage
            - delivery
            - provider
            - lost
            - destroyed
          description: Delivery idT status
        responsible:
          type: string
          description: Wallet of responsible user
        providerId:
          type: string
          format: uuid
          description: Provider ID
    DeliveryIdt:
      type: object
      required:
        - id
        - key
        - status
        - responsible
        - createdBy
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Delivery idT ID
        key:
          type: string
          description: Delivery idT unique key in format `A_000001`
        status:
          type: string
          enum:
            - created
            - storage
            - delivery
            - provider
            - lost
            - destroyed
          description: Delivery idT status
        responsible:
          type: string
          description: Wallet of responsible user
        providerId:
          type: string
          format: uuid
          description: Provider ID
        createdBy:
          type: string
          description: Wallet Address
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Last Updating Date
        deletedAt:
          type: string
          format: date-time
          description: Delete Date
    DeliveryIdtWithData:
      type: object
      required:
        - id
        - key
        - status
        - responsible
        - createdBy
        - createdAt
        - updatedAt
        - createdByData
        - responsibleData
      properties:
        id:
          type: string
          format: uuid
          description: Delivery idT ID
        key:
          type: string
          description: Delivery idT unique key in format `A_000001`
        status:
          type: string
          enum:
            - created
            - storage
            - delivery
            - provider
            - lost
            - destroyed
          description: Delivery idT status
        responsible:
          type: string
          description: Wallet of responsible user
        providerId:
          type: string
          format: uuid
          description: Provider ID
        createdBy:
          type: string
          description: Wallet Address
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Last Updating Date
        deletedAt:
          type: string
          format: date-time
          description: Delete Date
        createdByData:
          $ref: "#/components/schemas/User"
        responsibleData:
          $ref: "#/components/schemas/User"
        providerName:
          type: string
          description: Provider Name
    Task:
      type: object
      required:
        - id
        - type
        - status
        - priority
        - name
        - description
        - files
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Task ID
        type:
          type: string
          description: Task type
        status:
          type: string
          description: Task status
          enum:
            - new
            - inProgress
            - review
            - done
            - discard
        priority:
          type: string
          description: Task priority
          enum:
            - low
            - medium
            - high
        name:
          type: string
          description: Task name
        description:
          type: string
          description: Task description
        files:
          type: array
          items:
            type: string
          description: Attached files
        artefactId:
          type: string
          description: ID of artefact that link with task
        artefactType:
          type: string
          description: Type of artefact that link with task
        artefactData:
          type: object
          description: Data of artefact that link with task
        assignee:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        createdBy:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Last Updating Date
    TaskWithData:
      type: object
      required:
        - id
        - type
        - status
        - priority
        - name
        - description
        - files
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Task ID
        type:
          type: string
          description: Task type
        status:
          type: string
          description: Task status
          enum:
            - new
            - inProgress
            - review
            - done
            - discard
        priority:
          type: string
          description: Task priority
          enum:
            - low
            - medium
            - high
        name:
          type: string
          description: Task name
        description:
          type: string
          description: Task description
        files:
          type: array
          items:
            type: string
          description: Attached files
        artefactId:
          type: string
          description: ID of artefact that link with task
        artefactType:
          type: string
          description: Type of artefact that link with task
        artefactData:
          type: object
          description: Data of artefact that link with task
        assignee:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        createdBy:
          type: string
          description: Wallet Address
          example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
        createdAt:
          type: string
          format: date-time
          description: Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Last Updating Date
        createdByData:
          $ref: "#/components/schemas/User"
        assigneeData:
          $ref: "#/components/schemas/User"
  responses:
    UserData:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    UserNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: user:404
            message: User does not exist
    InvalidData:
      description: Invalid request data
    Unauthorized:
      description: Unauthorized
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: api:403
            message: You don't have access to this method
    SearchActivitiesData:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - items
            properties:
              total:
                type: number
              items:
                type: array
                items:
                  $ref: "#/components/schemas/ActivityLog"
    CheckUserAccess:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - isAdmin
              - isWalletAdmin
            properties:
              isAdmin:
                type: boolean
                description: If `true` user has admin access
              isWalletAdmin:
                type: boolean
                description: If `true` user has wallet admin access
    SearchAdminAccess:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - items
            properties:
              total:
                type: number
              items:
                type: array
                items:
                  $ref: "#/components/schemas/AdminAccess"
    AdminAccessData:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AdminAccess"
    AdminAccessExist:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: admin-access:400-exist
            message: User has admin access
    AdminAccessNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: admin-access:404
            message: User has no admin access
    SearchUsers:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - items
            properties:
              total:
                type: number
              items:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    FileBinary:
      description: Successful operation
      content:
        text/plain:
          schema:
            type: string
            format: binary
    FileData:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FileData"
    FileNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: file:404
            message: File not exist
    DeliveryIdtBase:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeliveryIdtBase"
    DeliveryIdtWithData:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DeliveryIdtWithData"
    DeliveryIdtCreated:
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DeliveryIdtWithData"
    SearchDeliveryIdt:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - items
            properties:
              total:
                type: number
              items:
                type: array
                items:
                  $ref: "#/components/schemas/DeliveryIdtWithData"
    DeliveryIdtNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: delivery:idt:404
            message: Delivery idT not found
    DeliveryIdtPrefixes:
      description: Not found
      content:
        application/json:
          schema:
            type: object
    TaskResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Task"
    TaskWithDataResponse:
      description: Successful operation
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TaskWithData"
    SearchTasksData:
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - items
            properties:
              total:
                type: number
              items:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    TaskNotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            errorCode: task:404
            message: Task not found
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Authorization using Auth routes
    ProviderClientId:
      type: apiKey
      name: client-id
      in: header
      description: Authorization for providers requests
    ProviderClientSecret:
      type: apiKey
      name: client-secret
      in: header
      description: Authorization for providers requests
    ProviderUserId:
      type: apiKey
      name: user-id
      in: header
      description: Authorization for providers requests
  requestBodies:
    EmptyBody:
      content:
        application/json:
          schema:
            type: object
    SearchActivitiesBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              artefactId:
                type: string
                format: uuid
                description: Artefact ID
              providerId:
                type: string
                format: uuid
                description: Provider ID
              types:
                type: array
                items:
                  $ref: "#/components/schemas/ActivityType"
              limit:
                type: number
                description: Number of return items
              offset:
                type: number
                description: Number of skip items
              sort:
                type: array
                items:
                  $ref: "#/components/schemas/SortModel"
    CreateAdminAccessBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - wallet
            properties:
              wallet:
                type: string
                description: Wallet Address
                example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
    SearchUsersBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              searchTerm:
                type: string
                description: User first name, last name or middle name
              ids:
                type: array
                items:
                  type: string
                  description: Wallet address
              limit:
                type: number
                description: Number of return items
              offset:
                type: number
                description: Number of skip items
              sort:
                type: array
                items:
                  $ref: "#/components/schemas/SortModel"
    UploadFileBody:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: If set and file exists then file content will be overwritten
              externalId:
                type: string
                format: uuid
                description: External file ID
              file:
                type: string
                format: binary
    SearchDeliveryIdtBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: array
                items:
                  type: string
                  enum:
                    - created
                    - storage
                    - delivery
                    - provider
                    - lost
                    - destroyed
              keys:
                type: array
                items:
                  type: string
                  description: Delivery idT unique key in format `A_000001`
              searchTerm:
                type: string
                description: Partial idT key
              ids:
                type: array
                items:
                  type: string
                  format: uuid
                  description: Delivery idT ID
              responsible:
                type: array
                items:
                  type: string
                  description: Delivery idT responsible wallet
              providers:
                type: array
                items:
                  type: string
                  format: uuid
                  description: Provider ID
              limit:
                type: number
                description: Number of return items
              offset:
                type: number
                description: Number of skip items
              sort:
                type: array
                items:
                  $ref: "#/components/schemas/SortModel"
    CreateDeliveryIdtBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - prefix
            properties:
              prefix:
                type: string
                minLength: 1
                maxLength: 3
                description: Start prefix of idT unique key. Min length - 1, max length - 3.
              amount:
                type: number
                minimum: 1
                maximum: 1000
                description: Number of idT keys
    EditDeliveryIdtBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                enum:
                  - created
                  - storage
                  - delivery
                  - provider
                  - lost
                  - destroyed
                description: Delivery idT status
              responsible:
                type: string
                description: Wallet of responsible user
    SearchTasksBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              searchTerm:
                type: string
                description: Search term
              types:
                type: array
                items:
                  type: string
                description: Task types
              status:
                type: array
                items:
                  type: string
                  enum:
                    - new
                    - inProgress
                    - review
                    - done
                    - discard
                description: Task status
              priority:
                type: array
                items:
                  type: string
                  enum:
                    - low
                    - medium
                    - high
                description: Task priority
              assignee:
                type: array
                items:
                  type: string
                description: Assignee IDs
              createdBy:
                type: array
                items:
                  type: string
                description: Created by IDs
              limit:
                type: number
                description: Number of return items
              offset:
                type: number
                description: Number of skip items
              sort:
                type: array
                items:
                  $ref: "#/components/schemas/SortModel"
    CreateTaskBody:
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - name
            properties:
              type:
                type: string
                description: Task type
              priority:
                type: string
                description: Task priority
                enum:
                  - low
                  - medium
                  - high
              name:
                type: string
                description: Task name
              description:
                type: string
                description: Task description
              files:
                type: array
                items:
                  type: string
                description: Attached files
              assignee:
                type: string
                description: Wallet Address
                example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
    EditTaskBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                description: Task status
                enum:
                  - new
                  - inProgress
                  - review
                  - done
                  - discard
              priority:
                type: string
                description: Task priority
                enum:
                  - low
                  - medium
                  - high
              name:
                type: string
                description: Task name
              description:
                type: string
                description: Task description
              files:
                type: array
                items:
                  type: string
                description: Attached files
              artefactData:
                type: object
                description: Data of artefact that link with task
              assignee:
                type: string
                description: Wallet Address
                example: 0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b
  parameters:
    walletParam:
      in: path
      name: wallet
      description: Wallet Address
      required: true
      schema:
        type: string
    fileIdParam:
      in: path
      name: id
      description: File ID
      required: true
      schema:
        type: string
        format: uuid
    idTParam:
      in: path
      name: id
      description: Delivery idT ID
      required: true
      schema:
        type: string
        format: uuid
    idTKeyParam:
      in: path
      name: id
      description: Delivery idT key or ID
      required: true
      schema:
        type: string
    taskIdParam:
      in: path
      name: id
      description: Task ID
      required: true
      schema:
        type: string
        format: uuid
