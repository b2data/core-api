openapi: 3.0.3
info:
  title: REST API for B2Payments
  version: 1.0.0
servers:
  - url: http://localhost:8081
  - url: http://54.37.199.51
tags:
  - name: Payments
    description: Available for any user
  - name: Webhook
    description: Available for webhooks only
  - name: Admin
    description: Only for Admin Wallet
paths:
  /payments/{id}:
    get:
      tags:
        - Payments
      summary: Get payment information
      operationId: getPayment
      parameters:
        - name: id
          in: path
          description: ID of payment
          required: true
          schema:
            type: string
            format: uuid
        - name: wallet
          in: query
          description: Wallet address 
          example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid request data
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: payment:404
                message: Payment not found
    delete:
      tags:
        - Payments
      summary: Cancel uncompleted payment
      operationId: cancelPayment
      parameters:
        - name: id
          in: path
          description: ID of payment
          required: true
          schema:
            type: string
            format: uuid
        - name: wallet
          in: query
          description: Wallet address 
          example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid payment status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Canceled:
                  value:
                    errorCode: payment:400-canceled
                    message: You cannot cancel canceled payment
                Failed:
                  value:
                    errorCode: payment:400-failed
                    message: You cannot cancel failed payment
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: payment:404
                message: Payment not found
  /payments:
    post:
      tags:
        - Payments
      summary: Create new payment
      operationId: createPayment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
                - amount
                - type
              properties:
                wallet:
                  description: Wallet address 
                  type: string
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                amount:
                  description: Payment Amount
                  type: integer
                  format: float
                type:
                  description: Payment Type
                  type: string
                  enum: [deposit, withdraw, exchange]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid request data
  /payments/search:
    post:
      tags:
        - Payments
      summary: Search payments
      operationId: searchPayments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
              properties:
                wallet:
                  description: Wallet Address
                  type: string
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                types:
                  description: Payment Type
                  type: array
                  items:
                    type: string
                    enum: [deposit, withdraw, exchange]
                  example: []
                status:
                  description: Payment Status
                  type: array
                  items:
                    type: string
                    enum: [created, process, failed, canceled]
                  example: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSearchResponse'
        '400':
          description: Invalid request data
  /payments/callback:
    post:
      tags:
        - Webhook
      security:
        - ApiKeyAuth: []
      summary: Callback from Bank
      operationId: paymentCallback
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
                - anount
              properties:
                wallet:
                  type: string
                  description: Wallet address 
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                amount:
                  type: integer
                  format: float
                  description: Payment Amount
      responses:
        501:
          description: Not implemented
  /payments/admin/{id}:
    get:
      tags:
        - Admin
      security:
        - BearerAuth: []
      summary: Get payment information by admin
      operationId: getPaymentByAdmin
      parameters:
        - name: id
          in: path
          description: ID of payment
          required: true
          schema:
            type: string
            format: uuid
        - name: wallet
          in: query
          description: Wallet address 
          example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: api:403
                message: You don't have access to this method
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: payment:404
                message: Payment not found
    patch:
      tags:
        - Admin
      security:
        - BearerAuth: []
      summary: Update payment by admin
      operationId: updatePaymentByAdmin
      parameters:
        - name: id
          in: path
          description: ID of payment
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - adminWallet
              properties:
                adminWallet:
                  type: string
                  description: Admin Wallet address 
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                status:
                  type: string
                  description: Payment Type
                  enum: [created, process, failed, canceled]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: api:403
                message: You don't have access to this method
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: payment:404
                message: Payment not found
  /payments/admin/search:
    post:
      tags:
        - Admin
      security:
        - BearerAuth: []
      summary: Search payments by admin
      operationId: searchPaymentsByAdmin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - adminWallet
              properties:
                adminWallet:
                  description: Admin Wallet Address
                  type: string
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                wallet:
                  description: Wallet Address
                  type: string
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                types:
                  description: Payment Type
                  type: array
                  items:
                    type: string
                    enum: [deposit, withdraw, exchange]
                  example: []
                status:
                  description: Payment Status
                  type: array
                  items:
                    type: string
                    enum: [created, process, failed, canceled]
                  example: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSearchResponse'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: api:403
                message: You don't have access to this method
  /activities/search:
    post:
      tags:
        - Admin
      security:
        - BearerAuth: []
      summary: Search activities by admin
      operationId: searchActivitiesByAdmin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - adminWallet
              properties:
                adminWallet:
                  type: string
                  description: Admin Wallet Address
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                wallet:
                  type: string
                  description: Wallet Address
                  example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
                types:
                  type: array
                  items:
                    type: string
                    enum: [paymentCreated, paymentUpdated]
                  example: []
                
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - total
                  - items
                properties:
                  total:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Activity'
        '400':
          description: Invalid request data
        '401':
          description: Unauthorized
        '403':
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: api:403
                message: You don't have access to this method
components:
  schemas:
    Activity:
      type: object
      required:
        - id
        - wallet
        - type
        - artefactId
        - data
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: Activity ID
        wallet:
          type: string
          description: Wallet Address
          example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
        type:
          type: string
          enum: [paymentCreated, paymentUpdated]
          description: Activity Type
        artefactId:
          type: string
          format: uuid
          description: Artefact ID
        data:
          type: object
          description: Artefact data
        createdAt:
          type: string
          format: date-time
          description: Activity Creation Date
    Payment:
      type: object
      required:
        - id
        - wallet
        - type
        - status
        - amount
        - details
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Payment ID
        wallet:
          type: string
          description: Wallet Address
          example: "0:c424531feb64afeb46607e0aff5609628207213308b62c123891d817389fc35b"
        type:
          type: string
          enum: [deposit, withdraw, exchange]
          description: Payment Type
        status:
          type: string
          enum: [created, process, failed, canceled]
          description: Payment Status
        amount:
          type: integer
          format: float
          description: Payment Amount
        details:
          type: object
          description: Payment Details
        createdAt:
          type: string
          format: date-time
          description: Payment Creation Date
        updatedAt:
          type: string
          format: date-time
          description: Payment Last Updating Date
        deletedAt:
          type: string
          format: date-time
          description: Payment Canceled Date
    PaymentSearchResponse:
      type: object
      required:
        - total
        - items
      properties:
        total:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    ErrorResponse:
      type: object
      required:
        - errorCode
        - message
      properties:
        errorCode:
          type: string
          enum:
            - api:403
            - payment:404
            - payment:400-canceled
            - payment:400-failed
        message:
          type: string
      xml:
        name: '##default'
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: devApiKey
      in: header
    BearerAuth:
      type: http
      scheme: bearer